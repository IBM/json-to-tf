/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React__default, { useMemo } from 'react';
import { usePrefix } from '../../internal/usePrefix.js';
import { useId } from '../../internal/useId.js';
import { TableContext } from './TableContext.js';

var _excluded = ["className", "children", "title", "description", "stickyHeader", "useStaticWidth"];

var TableContainer = function TableContainer(_ref) {
  var _cx;

  var className = _ref.className,
      children = _ref.children,
      title = _ref.title,
      description = _ref.description,
      stickyHeader = _ref.stickyHeader,
      useStaticWidth = _ref.useStaticWidth,
      rest = _objectWithoutProperties(_ref, _excluded);

  var baseId = useId('tc');
  var titleId = "".concat(baseId, "-title");
  var descriptionId = "".concat(baseId, "-description");
  var prefix = usePrefix();
  var tableContainerClasses = cx(className, "".concat(prefix, "--data-table-container"), (_cx = {}, _defineProperty(_cx, "".concat(prefix, "--data-table--max-width"), stickyHeader), _defineProperty(_cx, "".concat(prefix, "--data-table-container--static"), useStaticWidth), _cx));
  var value = useMemo(function () {
    return {
      titleId: title ? titleId : null,
      descriptionId: description ? descriptionId : null
    };
  }, [title, description, titleId, descriptionId]);
  return /*#__PURE__*/React__default.createElement(TableContext.Provider, {
    value: value
  }, /*#__PURE__*/React__default.createElement("div", _extends({}, rest, {
    className: tableContainerClasses
  }), title && /*#__PURE__*/React__default.createElement("div", {
    className: "".concat(prefix, "--data-table-header")
  }, /*#__PURE__*/React__default.createElement("h4", {
    className: "".concat(prefix, "--data-table-header__title"),
    id: titleId
  }, title), /*#__PURE__*/React__default.createElement("p", {
    className: "".concat(prefix, "--data-table-header__description"),
    id: descriptionId
  }, description)), children));
};

TableContainer.propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,

  /**
   * Optional description text for the Table
   */
  description: PropTypes.node,

  /**
   * Specify whether the table should have a sticky header
   */
  stickyHeader: PropTypes.bool,

  /**
   * Provide a title for the Table
   */
  title: PropTypes.node,

  /**
   * If true, will use a width of 'fit-content' to match the inner table width
   */
  useStaticWidth: PropTypes.bool
};
var TableContainer$1 = TableContainer;

export { TableContainer$1 as default };
