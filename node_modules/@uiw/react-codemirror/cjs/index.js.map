{
  "version": 3,
  "names": [
    "ReactCodeMirror",
    "forwardRef",
    "props",
    "ref",
    "className",
    "value",
    "selection",
    "extensions",
    "onChange",
    "onStatistics",
    "onCreateEditor",
    "onUpdate",
    "autoFocus",
    "theme",
    "height",
    "minHeight",
    "maxHeight",
    "width",
    "minWidth",
    "maxWidth",
    "basicSetup",
    "placeholder",
    "indentWithTab",
    "editable",
    "readOnly",
    "root",
    "initialState",
    "other",
    "editor",
    "useRef",
    "useCodeMirror",
    "container",
    "current",
    "state",
    "view",
    "setContainer",
    "useImperativeHandle",
    "Error",
    "defaultClassNames",
    "displayName"
  ],
  "sources": [
    "../src/index.tsx"
  ],
  "sourcesContent": [
    "import React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport { EditorState, EditorStateConfig, Extension, StateField } from '@codemirror/state';\nimport { EditorView, ViewUpdate } from '@codemirror/view';\nimport { BasicSetupOptions } from '@uiw/codemirror-extensions-basic-setup';\nimport { useCodeMirror } from './useCodeMirror';\nimport { Statistics } from './utils';\n\nexport * from '@uiw/codemirror-extensions-basic-setup';\nexport * from './useCodeMirror';\nexport * from './utils';\n\nexport interface ReactCodeMirrorProps\n  extends Omit<EditorStateConfig, 'doc' | 'extensions'>,\n    Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'placeholder'> {\n  /** value of the auto created model in the editor. */\n  value?: string;\n  height?: string;\n  minHeight?: string;\n  maxHeight?: string;\n  width?: string;\n  minWidth?: string;\n  maxWidth?: string;\n  /** focus on the editor. */\n  autoFocus?: boolean;\n  /** Enables a placeholder—a piece of example content to show when the editor is empty. */\n  placeholder?: string | HTMLElement;\n  /**\n   * `light` / `dark` / `Extension` Defaults to `light`.\n   * @default light\n   */\n  theme?: 'light' | 'dark' | 'none' | Extension;\n  /**\n   * Whether to optional basicSetup by default\n   * @default true\n   */\n  basicSetup?: boolean | BasicSetupOptions;\n  /**\n   * This disables editing of the editor content by the user.\n   * @default true\n   */\n  editable?: boolean;\n  /**\n   * This disables editing of the editor content by the user.\n   * @default false\n   */\n  readOnly?: boolean;\n  /**\n   * Whether to optional basicSetup by default\n   * @default true\n   */\n  indentWithTab?: boolean;\n  /** Fired whenever a change occurs to the document. */\n  onChange?(value: string, viewUpdate: ViewUpdate): void;\n  /** Some data on the statistics editor. */\n  onStatistics?(data: Statistics): void;\n  /** Fired whenever any state change occurs within the editor, including non-document changes like lint results. */\n  onUpdate?(viewUpdate: ViewUpdate): void;\n  /** The first time the editor executes the event. */\n  onCreateEditor?(view: EditorView, state: EditorState): void;\n  /**\n   * Extension values can be [provided](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions) when creating a state to attach various kinds of configuration and behavior information.\n   * They can either be built-in extension-providing objects,\n   * such as [state fields](https://codemirror.net/6/docs/ref/#state.StateField) or [facet providers](https://codemirror.net/6/docs/ref/#state.Facet.of),\n   * or objects with an extension in its `extension` property. Extensions can be nested in arrays arbitrarily deep—they will be flattened when processed.\n   */\n  extensions?: Extension[];\n  /**\n   * If the view is going to be mounted in a shadow root or document other than the one held by the global variable document (the default), you should pass it here.\n   * Originally from the [config of EditorView](https://codemirror.net/6/docs/ref/#view.EditorView.constructor%5Econfig.root)\n   */\n  root?: ShadowRoot | Document;\n  /**\n   * Create a state from its JSON representation serialized with [toJSON](https://codemirror.net/docs/ref/#state.EditorState.toJSON) function\n   */\n  initialState?: {\n    json: any;\n    fields?: Record<string, StateField<any>>;\n  };\n}\n\nexport interface ReactCodeMirrorRef {\n  editor?: HTMLDivElement | null;\n  state?: EditorState;\n  view?: EditorView;\n}\n\nconst ReactCodeMirror = forwardRef<ReactCodeMirrorRef, ReactCodeMirrorProps>((props, ref) => {\n  const {\n    className,\n    value = '',\n    selection,\n    extensions = [],\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    autoFocus,\n    theme = 'light',\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    root,\n    initialState,\n    ...other\n  } = props;\n  const editor = useRef<HTMLDivElement>(null);\n  const { state, view, container, setContainer } = useCodeMirror({\n    container: editor.current,\n    root,\n    value,\n    autoFocus,\n    theme,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions,\n    initialState,\n  });\n\n  useImperativeHandle(ref, () => ({ editor: editor.current, state: state, view: view }), [\n    editor,\n    container,\n    state,\n    view,\n  ]);\n\n  // check type of value\n  if (typeof value !== 'string') {\n    throw new Error(`value must be typeof string but got ${typeof value}`);\n  }\n\n  const defaultClassNames = typeof theme === 'string' ? `cm-theme-${theme}` : 'cm-theme';\n  return <div ref={editor} className={`${defaultClassNames}${className ? ` ${className}` : ''}`} {...other}></div>;\n});\n\nReactCodeMirror.displayName = 'CodeMirror';\n\nexport default ReactCodeMirror;\n"
  ],
  "mappings": "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"
}